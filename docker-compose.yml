version: '3.8'

services:
  # MySQL 数据库服务
  mysql:
    image: mysql:8.0
    container_name: ai-hackathon-mysql
    restart: unless-stopped
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD:-rootpassword}
      - MYSQL_DATABASE=${DB_NAME:-ai_hackathon}
      - MYSQL_USER=${DB_USER:-hackathon}
      - MYSQL_PASSWORD=${DB_PASSWORD:-hackathon123}
      - TZ=Asia/Shanghai
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
      - ./logs/mysql:/var/log/mysql
    networks:
      - ai-hackathon-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${DB_ROOT_PASSWORD:-rootpassword}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # MinIO 对象存储服务
  minio:
    image: minio/minio:latest
    container_name: ai-hackathon-minio
    restart: unless-stopped
    command: server /data --console-address ":9001"
    environment:
      - MINIO_ROOT_USER=${MINIO_ACCESS_KEY:-minioadmin}
      - MINIO_ROOT_PASSWORD=${MINIO_SECRET_KEY:-minioadmin}
      - TZ=Asia/Shanghai
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio-data:/data
      - ./logs/minio:/data/.minio.sys/logs
    networks:
      - ai-hackathon-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # 后端服务
  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: ai-hackathon-server
    restart: unless-stopped
    ports:
      - "8080:8080"
    volumes:
      # 持久化上传文件
      - ./server/uploads:/app/uploads
      # 持久化日志文件
      - ./logs/server:/app/logs
      # 可选：挂载配置文件以便动态修改
      - ./server/configs/config.yaml:/app/configs/config.yaml:ro
    environment:
      - TZ=Asia/Shanghai
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_USER=${DB_USER:-hackathon}
      - DB_PASSWORD=${DB_PASSWORD:-hackathon123}
      - DB_NAME=${DB_NAME:-ai_hackathon}
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY:-minioadmin}
      - MINIO_SECRET_KEY=${MINIO_SECRET_KEY:-minioadmin}
      - MINIO_BUCKET=${MINIO_BUCKET:-uploads}
    depends_on:
      mysql:
        condition: service_healthy
      minio:
        condition: service_healthy
    networks:
      - ai-hackathon-network
    # 暂时禁用健康检查，因为没有 /health 端点
    # healthcheck:
    #   test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/api/v1/health"]
    #   interval: 30s
    #   timeout: 3s
    #   retries: 3
    #   start_period: 10s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # 前端服务
  web:
    build:
      context: ./web
      dockerfile: Dockerfile
    container_name: ai-hackathon-web
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      # 持久化nginx日志
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - server
    environment:
      - TZ=Asia/Shanghai
    networks:
      - ai-hackathon-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 5s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

networks:
  ai-hackathon-network:
    driver: bridge

volumes:
  mysql-data:
    driver: local
  minio-data:
    driver: local
